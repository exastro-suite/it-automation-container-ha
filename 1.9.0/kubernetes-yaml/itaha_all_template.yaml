apiVersion: v1
kind: Namespace
metadata:
  name: ${bef_ns_name}

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: exastro-database-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: ${bef_pv_nfs_ip}
    path: ${bef_pv_db_path}

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: exastro-file-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: ${bef_pv_nfs_ip}
    path: ${bef_pv_file_path}

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: exastro-database-pvc
  namespace: ${bef_ns_name}
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  volumeName: exastro-database-pv

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: exastro-file-pvc
  namespace: ${bef_ns_name}
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  volumeName: exastro-file-pv

---

apiVersion: v1
kind: Service
metadata:
  name: ${bef_cm_dbname}
  namespace: ${bef_ns_name}
spec:
  selector:
    app: mariadb
  ports:
  - port: 3306
    targetPort: 3306

---

apiVersion: v1
kind: Service
metadata:
  name: webapp-np
  namespace: ${bef_ns_name}
spec:
  selector:
    app: webapp
  ports:
  - port: 80
    nodePort: ${bef_svc_webapp_nodeport}
  type: NodePort

---

apiVersion: v1
kind: Service
metadata:
  name: ansible-np
  namespace: ${bef_ns_name}
spec:
  selector:
    app: ansible
  ports:
  - name: http
    port: 80
  - name: https
    port: 443

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: cm-data
  namespace: ${bef_ns_name}
data:
  EXASTRO_ITA_DB_SERVICE_NAME: ${bef_cm_dbname}
  EXASTRO_ITA_DB_USERNAME: ${bef_cm_ita_db_username}

---

apiVersion: v1
kind: Secret
metadata:
  name: secret-data
  namespace: ${bef_ns_name}
type: Opaque
data:
  EXASTRO_ITA_DB_PASSWORD: ${bef_secret_ita_db_password}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ansible
  namespace: ${bef_ns_name}
  labels:
    app: ansible
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ansible
  template:
    metadata:
      labels:
        app: ansible
    spec:
      containers:
      - name: ansible
        image: it-automation-ansible:${bef_dep_ita_version}-ja-${bef_dep_os}
        ports:
        - containerPort: 80
        - containerPort: 443
        securityContext:
          privileged: true
        volumeMounts:
          - name: exastro-file-pv
            mountPath: /exastro-file-volume
      volumes:
      - name: exastro-file-pv
        persistentVolumeClaim:
          claimName: exastro-file-pvc
      terminationGracePeriodSeconds: 10

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: backyard
  namespace: ${bef_ns_name}
  labels:
    app: backyard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backyard
  template:
    metadata:
      labels:
        app: backyard
    spec:
      containers:
      - name: backyard
        image: it-automation-backyard:${bef_dep_ita_version}-ja-${bef_dep_os}
        envFrom:
        - configMapRef:
            name: cm-data
        - prefix:
          secretRef:
            name: secret-data
        ports:
        - containerPort: 80
        securityContext:
          privileged: true
        volumeMounts:
          - name: exastro-file-pv
            mountPath: /exastro-file-volume
      volumes:
      - name: exastro-file-pv
        persistentVolumeClaim:
          claimName: exastro-file-pvc
      terminationGracePeriodSeconds: 10

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariadb
  namespace: ${bef_ns_name}
  labels:
    app: mariadb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mariadb
  template:
    metadata:
      labels:
        app: mariadb
    spec:
      containers:
      - name: mariadb
        image: it-automation-mariadb:${bef_dep_ita_version}-ja-${bef_dep_os}
        ports:
        - containerPort: 3306
        securityContext:
          privileged: true
        volumeMounts:
          - name: exastro-database-pv
            mountPath: /exastro-database-volume
      volumes:
      - name: exastro-database-pv
        persistentVolumeClaim:
          claimName: exastro-database-pvc
      terminationGracePeriodSeconds: 10

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  namespace: ${bef_ns_name}
  labels:
    app: webapp
spec:
  replicas: ${bef_dep_webapp_replicas}
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      hostAliases:
      - ip: "127.0.0.1"
        hostnames:
        - "exastro-it-automation"
#      - ip: "${bef_dep_webapp_teraform_ip}"
#        hostnames:
#        - "${bef_dep_webapp_teraform_host}"
      containers:
      - name: webapp
        image: it-automation-webapp:${bef_dep_ita_version}-ja-${bef_dep_os}
        envFrom:
        - configMapRef:
            name: cm-data
        - prefix:
          secretRef:
            name: secret-data
        ports:
        - containerPort: 80
        securityContext:
          privileged: true
        volumeMounts:
          - name: exastro-file-pv
            mountPath: /exastro-file-volume
      volumes:
      - name: exastro-file-pv
        persistentVolumeClaim:
          claimName: exastro-file-pvc
      terminationGracePeriodSeconds: 10
